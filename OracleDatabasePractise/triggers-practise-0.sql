

-- ------------------prob stmt: ------------------------------------------------------
-- you have a table 'PROJ_TRANSPORT_ATTRIBUTES' WHEN EVER THERE IS AN 
-- INSERT OR UPDATE event, you need to execute a trigger which populates a table
-- called 'AUDITS', 'AUDITS' should maintain details like 'table_modified', 'columns affected'
-- 'timestamp', 'transaction_type'

-- hint: for INSERT all columns are affected, and for update store the column name
-- and if multiple columns are affected, store them in a separate row.
-- ------------------------------------------------------------------------------------




-- creating a table called AUDITS to maintain the records of triggering events.

CREATE TABLE AUDITS ( 

	AUDITS_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
	COLUMN_AFFECTED VARCHAR2(100),
	UPDATE_TIME TIMESTAMP,
	TRANSACTION_TYPE VARCHAR2(100),
	OLD_VALUE VARCHAR2(200),
	NEW_VALUE VARCHAR2(200)
	
);





-- The below is the header section OF TRIGGER :
-- [--------------------------------------]


CREATE OR REPLACE TRIGGER PTA_TRIGGER
AFTER INSERT OR UPDATE 
ON PROJ_TRANSPORT_ATTRIBUTE
FOR EACH ROW
ENABLE


-- [---------------------------------------]
-- The below is the Body section:

DECLARE

	-- this is a declaration section. 
	-- here you can define sql variables

	TRANSACTION_TYPE VARCHAR2(100)
	COLUMN_AFFECTED VARCHAR2(100)

BEGIN

	-- determining the transaction type here.

	TRANSACTION_TYPE := CASE
		WHEN INSERTING THEN 'INSERT'
		WHEN UPDATING THEN 'UPDATE'
	END;


	-- operationS to be done can be written here.
	
	IF :OLD.CALCULATED_NEED_BY_DATE != :NEW.CALCULATED_NEED_BY_DATE THEN

		INSERT INTO AUDITS(AUDITS_ID,COLUMN_AFFECTED, UPDATE_TIME TIMESTAMP, TRANSACTION_TYPE)
		VALUES (COLUMN_AFFECTED, SYSTIMESTAMP, TRANSACTION_TYPE, :OLD.CALCULATED_NEED_BY_DATE, :NEW.CALCULATED_NEED_BY_DATE);
	
	END;

	IF :OLD.UACE_ID != :NEW.UACE_ID THEN

		INSERT INTO AUDITS(AUDITS_ID,COLUMN_AFFECTED, UPDATE_TIME TIMESTAMP, TRANSACTION_TYPE)
		VALUES (COLUMN_AFFECTED, SYSTIMESTAMP, TRANSACTION_TYPE, :OLD.UACE_ID, :NEW.UACE_ID);
	
	END;

	IF :OLD.FINAL_HUB_SITE_INFO_ID != :NEW.FINAL_HUB_SITE_INFO_ID  THEN
			
			INSERT INTO AUDITS(AUDITS_ID,COLUMN_AFFECTED, UPDATE_TIME TIMESTAMP, TRANSACTION_TYPE)
			VALUES (COLUMN_AFFECTED, SYSTIMESTAMP, TRANSACTION_TYPE, :OLD.FINAL_HUB_SITE_INFO_ID, :NEW.FINAL_HUB_SITE_INFO_ID);
	END;


	IF :OLD.TECHNOLOGY_TYPE != :NEW.TECHNOLOGY_TYPE THEN

			INSERT INTO AUDITS(AUDITS_ID,COLUMN_AFFECTED, UPDATE_TIME TIMESTAMP, TRANSACTION_TYPE)
			VALUES (COLUMN_AFFECTED, SYSTIMESTAMP, TRANSACTION_TYPE, :OLD.TECHNOLOGY_TYPE, :NEW.TECHNOLOGY_TYPE);
	
	END;

END;





















